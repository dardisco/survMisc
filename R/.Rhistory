trans
trans="lin"
s1
ref1
s1[, S + sign(bound) * ref * S * (1 + sigSq * n / sqrt(n)) ]
0
s1[, S -1 * ref1 * S * (1 + sigSq * 38 / sqrt(38)) ]
s1[, S +1 * ref1 * S * (1 + sigSq * 38 / sqrt(38)) ]
s1
ref1
trans
s1
n1
n1=19
n1=38
CI
debugonce("LIN")
ls()
how
bound
ref
S
sigSq
Q
trans="log"
10^-1
degubonce("LOG")
debugonce("LOG")
ls()
bound
n
eval(n)
S
sigSq
how
theta
theta
theta
Q
trans="asi"
cat(err1)
cat(err1)
0
x <- t1
n1
n1
how="point"
s1
how="hall"
s1[, unlist(lapply(list(n1), function(x) S + sign(bound) * ref * S * sqrt(sigSq)))]
0
s1[, unlist(lapply(list(n1), function(x) S + 1 * S * (ref * (1 + sigSq * n)) / sqrt(n)))]
0
s1[, unlist(lapply(list(n1), function(x) S + 1 * S * (ref1 * (1 + sigSq * n)) / sqrt(n)))]
s1
s1
trans
trans="lin"
debugonce("LIN")
ls()
n
eval(n)
Q
debugonce("LIN")
ls()
eval(x)
eval(n)
Q
n
s1
s1[cg==unique(cg), ]
detach(package:data.table)
library(data.table)
0
degugonce("LIN")
debugonce("LIN")
debugonce("LIN")
ls()
eval(n)
debug("LIN")
eval(n)
eval(n)
x
eval(x)
Q
as.list(n1)[1]
list(n1)[1]
n1
n1
is.list(n1[, V1])
as.list(n1[, V1])
is.list(n1[, V1, drop=FALSE])
is.list(n1)
is.list(x[, list(max(ncg)), by=cg][, V1])
as.list(n1)[[1]]
n1
as.list(n1)[[1]]
as.list(n1)[[2]]
lapply(as.list(n1), print)
lapply(as.list(n1), paste)
lapply(as.list(n1), cat)
lapply(as.list(n1), '[[')
0
lapply(as.list(n1), '[')
lapply(as.list(n1), unlist)
lapply(as.list(n1), function(x) x^2)
eval(n)
eval(n)
eval(n)
eval(n)
eval(n)
eval(n)
eval(n)
undebug("LIN")
n1
0
ref1
tL
tU
?mapply
n1
n1
n2
how
s1[, cg]
s1
rm(x)
rm(s1)
t1
0
x <- t1
unclass(attr(x, "sf"))
t1
unclass(t1)
x <- t1
unclass(attr(x, "sf"))
ref1
n1
TRNAS
TRANS
s1
n1
n1
t1
x <- t1
s1
n1
A1
s1
m1
n1
0
0
s1
x <- t1
x <- t1
0
0
0
cg2=1
0
0
?last
last(s1)
first(l1)
?last
0
?tail
A1
0
how="nair"
0
A1
how
ref1
0
0
A1
A1[1, ]
0
0
x <- t1
x
tL
tU
s1
)
n1
A1
colnames(d1)
x <- c1
t1
x <- t1
tL
tL=300
tU=450
A1
tU=400
A1
ref1
str(A1)
A1
ncol(A1)
A1
rownames(A1)
rownames(d1)
i=2
i=1
x <- t1
n1
A1
head(d1)
d1[0.1, 0.02]
d1["0.1", "0.02"]
as.character(A1)
0
0
A1
s1
rm(x)
rm(t1)
rm(s1)
t1
x <- t1
s1
n1
A1
)
A1
colnames(d1)
ref1
d1
A1
0
0
?tryCatch
ref1
ref1
A1
i="0.1"
j="0.6"
d1
d1["0.1", "0.6"]
d1["0.6", "0.1"]
A1
ref1
0
s1
0
s1
rm(S1)
S1
s1
x <- s1
res1
x[, Sv := NULL]
x[, sigSq := NULL]
x
res1
k=1L
0
0
s1
s1
x
x
x[, list(S, lower), by=c(t, cg)]
x[, list(S, lower), by=list(t, cg)]
x[, list(S, lower), by=list(t, cg)]
s1
0
s1
t1
k
is.integer(j1)
j1
k=2L
j1
k
k=1L
j1
s1
res1
res1
res1
res1
res1
j2
j1
res1
0
j1
j1=9
s1
res1
res1
res1
res1
na1
na1
0
res1
x
0
x
0
x
0
0
x
x
x
s1`
s1
x
x
0
k1
k1
0
x <- k1
x <- k1
g1
0
x <- k2
k1
n1
res1
res1
b2
x <- b2
res1
n1
res1
0
x <- b1
res1
tail(res1)
n1
n1
res1
res1
res1
res1[1:30, ]
x1
res1
dim(x)
n1
0
n1
res1
n1
b2
res1
x <- b2
n1
x <- b1
0
0
0
0
0
0
0
0
0
0
x
0
0
0
n1
130*3
?CJ
DT
0
0
0
n1
0
?CJ
0
g1
res2
0
x
n1
n1
n1[1,]
38+54+45
x[, t]
res1
0
nrow(res1)
nrow(res1)
nrow(x)
x
res1
length(unique(x[, t]))
0
0
duplicated(res1)
res1
res1
i=1
0
0
dim(x1)
x1
0
)
0
l1
0
0
l1
res1
t1
t1=2640
0
length(y1)
130*3
y1
y1
y1
y1
res1
res1
0
res1[,,1]
i=t1[1]
i=130
n1
n1
n1
n1
0
0
0
0
0
0
0
0
0
n1
x
i
n1
i
j
n1
res1
i
n1
a1[1]
str(a1)
a1[130]
a1[260]
a1[259]
a1
a1[260]
a1[1]
t1
t1 <- t1[160]
t1
t2 <- t1[130]
t2
y
y
)
0
0
m1
t1=t1[130]
0
0
0
0
0
0
0
0
0
0
0
y
y
0
0
x1
setkey(x1, cg)
x1
n1
0
0
0
0
0
1
